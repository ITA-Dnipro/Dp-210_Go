// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stat.proto

package statistics

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DocRequest struct {
	DocsBytesArr         []byte   `protobuf:"bytes,1,opt,name=docsBytesArr,proto3" json:"docsBytesArr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocRequest) Reset()         { *m = DocRequest{} }
func (m *DocRequest) String() string { return proto.CompactTextString(m) }
func (*DocRequest) ProtoMessage()    {}
func (*DocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01fabdc1b78bd68b, []int{0}
}

func (m *DocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocRequest.Unmarshal(m, b)
}
func (m *DocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocRequest.Marshal(b, m, deterministic)
}
func (m *DocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocRequest.Merge(m, src)
}
func (m *DocRequest) XXX_Size() int {
	return xxx_messageInfo_DocRequest.Size(m)
}
func (m *DocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DocRequest proto.InternalMessageInfo

func (m *DocRequest) GetDocsBytesArr() []byte {
	if m != nil {
		return m.DocsBytesArr
	}
	return nil
}

func init() {
	proto.RegisterType((*DocRequest)(nil), "statistics.DocRequest")
}

func init() { proto.RegisterFile("stat.proto", fileDescriptor_01fabdc1b78bd68b) }

var fileDescriptor_01fabdc1b78bd68b = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2e, 0x49, 0x2c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x02, 0xb3, 0x33, 0x8b, 0x4b, 0x32, 0x93, 0x8b, 0xa5,
	0xa4, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0x32, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9,
	0x05, 0x25, 0x95, 0x10, 0x85, 0x4a, 0x06, 0x5c, 0x5c, 0x2e, 0xf9, 0xc9, 0x41, 0xa9, 0x85, 0xa5,
	0xa9, 0xc5, 0x25, 0x42, 0x4a, 0x5c, 0x3c, 0x29, 0xf9, 0xc9, 0xc5, 0x4e, 0x95, 0x25, 0xa9, 0xc5,
	0x8e, 0x45, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x28, 0x62, 0x46, 0xce, 0x5c, 0x2c,
	0xc1, 0x25, 0x89, 0x25, 0x42, 0xd6, 0x5c, 0xec, 0x2e, 0xf9, 0xc9, 0x60, 0xa6, 0x98, 0x1e, 0xc2,
	0x3a, 0x3d, 0x84, 0x71, 0x52, 0x62, 0x7a, 0x10, 0xab, 0xf5, 0x60, 0x56, 0xeb, 0xb9, 0x82, 0xac,
	0x56, 0x62, 0x48, 0x62, 0x03, 0x8b, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x46, 0x29,
	0x41, 0xb4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatClient is the client API for Stat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatClient interface {
	DocStat(ctx context.Context, in *DocRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type statClient struct {
	cc *grpc.ClientConn
}

func NewStatClient(cc *grpc.ClientConn) StatClient {
	return &statClient{cc}
}

func (c *statClient) DocStat(ctx context.Context, in *DocRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/statistics.Stat/DocStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatServer is the server API for Stat service.
type StatServer interface {
	DocStat(context.Context, *DocRequest) (*empty.Empty, error)
}

// UnimplementedStatServer can be embedded to have forward compatible implementations.
type UnimplementedStatServer struct {
}

func (*UnimplementedStatServer) DocStat(ctx context.Context, req *DocRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocStat not implemented")
}

func RegisterStatServer(s *grpc.Server, srv StatServer) {
	s.RegisterService(&_Stat_serviceDesc, srv)
}

func _Stat_DocStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatServer).DocStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statistics.Stat/DocStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatServer).DocStat(ctx, req.(*DocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "statistics.Stat",
	HandlerType: (*StatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DocStat",
			Handler:    _Stat_DocStat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stat.proto",
}
